==============
MOM6 Internals
==============

:author: Marshall Ward
:description: Tour of MOM6 architecture
:date: 2022-10-18
:url: https://marshallward.org/mom6workshop/internals.html
:preface:
   TODO


MOM6 directory tree
===================

===============   =================================
Directory         Description
===============   =================================
``src/``          Model code, including solvers
``config_src/``   Configurable components
``pkg/``          Dependencies linked into ``src/``
``doc/``          Documentation
``ac/``           Autoconf build
===============   =================================


``src/``
========

======================  ============================
Directory               Description
======================  ============================
``core/``               Init, Timestep, main solvers
``parameterizations/``  Viscosity, mixing, diabatic
``tracer/``             Tracer dynamics
``ALE/``                Vertical remapping
``diagnostics/``        Diagonostic management
``user/``               Preset forcing, topography
======================  ============================

Also see ``framework/``, ``equation_of_state/``, etc


TODO
====

Code layout:

* One module per file ("python rule")

* Modules are "independent" (no global/module data)

   * Control structures manage cross-module data
   * "big" functions, lots of arguments
   * some might argue with this assertion!


``step_MOM()``
============

* Field prep (ustar, psurf, etc)

* Dynamics: ``step_MOM_dynamics()``

* Thermodynamics: ``step_MOM_thermo()``

* Tracers: ``step_MOM_tracer_dyn()``

Ordering is somewhat configurable


Dynamic core
============

``step_MOM_dyn_split_RK2()``

===================================    ===================
Forcing                                Subroutine
===================================    ===================
:math:`f \hat{z} \times \mathbf{u}`    ``CorAdCalc()``
:math:`-\nabla p`                      ``PressureForce()``
``diff[uv]`?                           (...)
Barotropic step                        ``btstep()``
===================================    ===================


Metrics
=======

.. image:: img/Arakawa_C_grid.png

* G, GV, etc

* IJ/ij syntax

* Fortran array indexing (arbitrary)


Memory Layout
=============

.. list-table::

   * - Symmetric:

       .. figure:: img/Horizontal_NE_indexing_sym.png


     - Nonsymmetric:

       .. figure:: img/Horizontal_NE_indexing_nonsym.png

Symmetric grids have additional west/south points (possibly duplicate)


Model code
==========


Configuration Code
==================

* drivers

* memory layout (symmetrics/nonsymmetric)

* framework (infra/FMS1,FMS2)

* externals
   * biogeochemical model
   * Data assimilation (ODA)
   * database interface
   * Python interface?


Parallelization
===============


Masking
=======


Checksums
=========

* ``hchksum``: Cell centers

* ``uvchksum``: Cell faces

* ``Bchksum``: Cell vertices


Diagnostics
===========

* ``register_diag_field()``
* ``post_data()``


Timers
======


